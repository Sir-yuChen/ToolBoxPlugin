<!--[可选项]可指定插件主页，用于在商店插件页展示 plugin.xml项目清单文件
https://juejin.cn/post/7132360828409348104
-->
<idea-plugin url="https://example.com/my-plugin-site">
    <!-- 插件唯一id，不能和其他插件项目重复，所以推荐使用com.xxx.xxx的格式
            插件不同版本之间不能更改，若没有指定，则与插件名称相同 -->
    <id>com.github.toolboxplugin</id>
    <!-- 插件名称，别人在官方插件库搜索你的插件时使用的名称 -->
    <name>ToolBoxPlugin</name>
    <!-- 插件版本号  plugin.xml和build.gradle 二选一-->
    <version>1.0</version>

    <!-- 供应商主页和email（不能使用默认值，必须修改成自己的）-->
    <vendor email="2470838639@qq.com" url="https://github.com/Sir-yuChen">Sir-yuChen</vendor>

    <!-- 插件的描述 （不能使用默认值，必须修改成自己的。并且需要大于40个字符）-->
    <description><![CDATA[
           ToolBoxPlugin这是一款工具箱插件,里面包含各种开发工具,全部有java语言编写,包括搜索、展示、阅读等功能. <br>
      <em> ToolBoxPlugin 工具箱 </em>
    ]]></description>
    <!-- 插件版本变更信息，支持HTML标签；
         将展示在 settings | Plugins 对话框和插件仓库的Web页面 -->
    <change-notes><![CDATA[
      1. 图书阅读<br>
        a. 搜索BOOK<br>
        b. 阅读BOOK<br>
        c. 书架管理<br>
      <p>ToolBoxPlugin 工具箱功能迭代中...</p>
    ]]>
    </change-notes>
    <!-- 插件所依赖的其他插件的id -->
    <depends>com.intellij.modules.platform</depends>

    <!-- 声明该插件对IDEA core或其他插件的扩展 -->
    <extensions defaultExtensionNs="com.intellij">
        <!--
            secondary:true表示设置在tool window bar最下方   参考：https://www.jianshu.com/p/676201ef113c
            anchor: right或bottom
            canCloseContents 关闭
            canCloseContents="true"
         -->
        <!--
            音乐模块暂时无法实现
             <toolWindow id="Toolboxplugin"
                          anchor="right"
                          factoryClass="com.github.toolboxplugin.factory.MusicToolWindowFactory"
                          secondary="true"
                          icon="/images/icons/music.svg"
              />
          -->
        <!-- Add your extensions here -->
        <executor implementation="com.github.toolboxplugin.executor.IReaderRunExecutor" id="IReaderRunExecutor"/>
        <!--数据存储文件配置-->
        <applicationService
                serviceImplementation="com.github.toolboxplugin.infrastructure.iReader.StoryBookshelfSetting"/>
        <applicationService
                serviceImplementation="com.github.toolboxplugin.infrastructure.iReader.StoryBookRulesData"/>
        <applicationService
                serviceImplementation="com.github.toolboxplugin.infrastructure.iReader.IReaderDebugData"/>
    </extensions>
    <!-- 编写插件动作 注册Action
            一个 Action 表示 IDEA 菜单里的一个 menu item 或工具栏上的一个按钮，通过继承 AnAction class 实现，
            当选择一个 menu item 或点击工具栏上的按钮时，就会调用 AnAction 类的 actionPerformed 方法
     -->
    <actions>
        <!--
            group-id -> 要绑定的菜单组ID
            anchor -> 顺序位置 枚举值有:first last before after
            relative-to-action -> 当anchor的值在before after其中一个时,需要此字段指定相对的一个菜单操作
            popup 决定该Group是否允许子菜单
        -->
        <group id="plugin.toolBoxPlugin" text="ToolBoxPlugin" description="工具箱">
            <!-- MainMenu 主菜单的最后项-->
            <add-to-group group-id="MainMenu" anchor="last"/>
            <group id="plugin.toolBoxPlugin.iReader" text="iReader" popup="true">
                <action id="iReader_search" class="com.github.toolboxplugin.action.IReaderSearchAction"
                        text="搜索图书" description="搜索图书"/>
                <action id="iReader_bookSlef" class="com.github.toolboxplugin.action.IReaderBookSlefAction"
                        text="图书书架" description="图书书架"/>
                <action id="iReader_debug" class="com.github.toolboxplugin.action.IReaderDebugAction"
                        text="调试模式"/>
                <action id="iReader_debug_rules" class="com.github.toolboxplugin.action.IReaderRulesAction"
                        text="调试规则"/>
            </group>
        </group>
        <!--
            <group> 元素会定义一个 action group（多个action），设置 action group 的 id、文本、描述
            <action> 元素会定义一个 action，指定 action 的 id、实现类、显示文本、描述
            <add-to-group> 元素指定其外部 action 或 action group 被添加到的位置
        -->
    </actions>
</idea-plugin>